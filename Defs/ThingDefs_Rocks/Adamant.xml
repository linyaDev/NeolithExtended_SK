<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  <ThingDef Name="WeatheredAdamant" ParentName="WeatheredRockBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>WeatheredAdamant</defName>
    <label>Weathered Adamant</label>
    <description>Large masses of eroded Adamant, a mysterious and incredibly hard stone. Little is known about the origins of this rare rock and the best glitterworld minerologists have not found a way to explain its formation. Some speculate that the nodes of adamant scattered around this solar system are the remnants of planetary-scale alien structures that were destroyed around the time this solar system begin forming. Adamant is difficult to mine and craft with, but can be used to make very strong walls, beautiful floors, and deadly arrows. However, it is also rare and valuable, so possession of even a little adamant can attract significant interest.</description>
    <graphicData>
      <shaderType>CutoutComplex</shaderType>
      <texPath>Things/Rock/WeatheredGranite</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(4,4)</drawSize>
      <color>(49,66,60)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredGranite/WeatheredGraniteA</uiIconPath>
    <randomColorsOne>
      <li>(49,70,63)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(83,115,115)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>3000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>3</Beauty>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>ChunkAdamant</mineableThing>
      <mineableDropChance>0.6</mineableDropChance>
      <mineableYield>1</mineableYield>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.0002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>5</minClusterSize>
    <maxClusterSize>25</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>2</DropProbability>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>3</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>WeatheredBasalt</li>
      <li>WeatheredGranite</li>
      <li>WeatheredLimestone</li>
      <li>WeatheredMarble</li>
      <li>WeatheredSandstone</li>
      <li>WeatheredSlate</li>
      <li>WeatheredClaystone</li>
      <li>WeatheredMudstone</li>
      <li>HewnAdamant</li>
    </ThingsToReplace>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>false</mustReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>weathered</li>
      <li>fictional</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>0.5</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="HewnAdamant" ParentName="HewnRockBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>HewnAdamant</defName>
    <label>Hewn Adamant</label>
    <description>Large masses of hewn Adamant, a mysterious and incredibly hard stone. Little is known about the origins of this rare rock and the best glitterworld minerologists have not found a way to explain its formation. Some speculate that the nodes of adamant scattered around this solar system are the remnants of planetary-scale alien structures that were destroyed around the time this solar system begin forming. Adamant is difficult to mine and craft with, but can be used to make very strong walls, beautiful floors, and deadly arrows. However, it is also rare and valuable, so possession of even a little adamant can attract significant interest.</description>
    <graphicData>
			<texPath>Things/Rock/HewnRockWall</texPath>
			<graphicClass>Graphic_Random</graphicClass>
			<linkType>CornerFiller</linkType>
			<linkFlags>
				<li>Wall</li>
        <li>Rock</li>
        <li>MapEdge</li>
			</linkFlags>
			<damageData>
				<cornerTL>Damage/Corner</cornerTL>
				<cornerTR>Damage/Corner</cornerTR>
				<cornerBL>Damage/Corner</cornerBL>
				<cornerBR>Damage/Corner</cornerBR>
				<edgeTop>Damage/Edge</edgeTop>
				<edgeBot>Damage/Edge</edgeBot>
				<edgeLeft>Damage/Edge</edgeLeft>
				<edgeRight>Damage/Edge</edgeRight>
			</damageData>
      <color>(49,66,60)</color>
    </graphicData>
    <randomColorsOne>
      <li>(49,70,63)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(83,115,115)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>4000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>0</Beauty>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>ChunkAdamant</mineableThing>
      <mineableDropChance>0.7</mineableDropChance>
      <mineableYield>1</mineableYield>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.5</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>5</minClusterSize>
    <maxClusterSize>20</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>3.0</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>3</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>HewnBasalt</li>
      <li>HewnGranite</li>
      <li>HewnLimestone</li>
      <li>HewnMarble</li>
      <li>HewnSandstone</li>
      <li>HewnClaystone</li>
      <li>HewnMudstone</li>
      <li>HewnSlate</li>
    </ThingsToReplace>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>true</mustReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>hewn</li>
      <li>fictional</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>0.5</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="SolidAdamant" ParentName="SolidRockBase" Class="Minerals.ThingDef_SolidRock">
    <defName>SolidAdamant</defName>
    <label>Solid Adamant</label>
    <description>Large masses of solid Adamant, a mysterious and incredibly hard stone. Little is known about the origins of this rare rock and the best glitterworld minerologists have not found a way to explain its formation. Some speculate that the nodes of adamant scattered around this solar system are the remnants of planetary-scale alien structures that were destroyed around the time this solar system begin forming. Adamant is difficult to mine and craft with, but can be used to make very strong walls, beautiful floors, and deadly arrows. However, it is also rare and valuable, so possession of even a little adamant can attract significant interest.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredBasalt</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(4,4)</drawSize>
      <color>(49,66,60)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredBasalt/WeatheredBasaltA</uiIconPath>
    <randomColorsOne>
      <li>(49,70,63)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(83,115,115)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>3500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>0</Beauty>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>ChunkAdamant</mineableThing>
      <mineableDropChance>0.7</mineableDropChance>
      <mineableYield>1</mineableYield>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>1</minClusterProbability>
    <maxClusterProbability>1</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>HewnAdamant</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>3</DropProbability>
        <MinMiningSkill>6</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>3</DropProbability>
        <CountPerDrop>5</CountPerDrop>
        <WasteProduct>true</WasteProduct>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>SolidBasalt</li>
      <li>SolidGranite</li>
      <li>SolidLimestone</li>
      <li>SolidMarble</li>
      <li>SolidSandstone</li>
      <li>SolidSlate</li>
      <li>SolidClaystone</li>
      <li>SolidMudstone</li>
    </ThingsToReplace>
    <!-- If it replaces everything -->
    <replaceAll>false</replaceAll>
    <!-- If it must replace something in order to spawned -->
    <mustReplace>true</mustReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>solid</li>
      <li>fictional</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>0.5</mineSpeedFactor>
  </ThingDef>
  
<!--
  <RecipeDef ParentName="MakeStoneBlocksBase">
    <defName>Make_StoneBlocksAdamant</defName>
    <label>Make Adamantine Blocks</label>
    <description>Cuts adamantine chunks into usable blocks.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>ChunkAdamant</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>ChunkAdamant</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <BlocksAdamant>20</BlocksAdamant>
    </products>
  </RecipeDef>
-->

</Defs>
